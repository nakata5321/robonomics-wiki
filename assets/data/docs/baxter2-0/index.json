{"hash":"456bb32760550f61cf437a34153e7563739495d5","data":{"doc":{"id":"7116a39339937391abe96ee0b1a07a77","title":"Control Baxter robot with robonomics","headings":[{"value":"Control Baxter robot with robonomics"}],"subtitles":[{"depth":1,"value":"Control Baxter robot with robonomics","anchor":"#control-baxter-robot-with-robonomics"},{"depth":2,"value":"Requirements:","anchor":"#requirements"},{"depth":2,"value":"1. Download simulation and controller packages","anchor":"#1-download-simulation-and-controller-packages"},{"depth":2,"value":"2. Start simulation","anchor":"#2-start-simulation"},{"depth":3,"value":"Let's start our simulation:","anchor":"#lets-start-our-simulation"},{"depth":2,"value":"3.Manage accounts in DAPP","anchor":"#3manage-accounts-in-dapp"},{"depth":2,"value":"4.Start simulation","anchor":"#4start-simulation"},{"depth":4,"value":"gateway.ipfs.io/ipfs/","anchor":"#gatewayipfsioipfsput-your-hash-here"}],"content":"# Control Baxter robot with robonomics\n\nExample of how it works is available on [YouTube.][db1]\n\n## Requirements:\n\n - ROS Melodic + Gazebo (installation manual [here][db2])  \n - extra packages:\n```sh\nsudo apt-get install ros-melodic-qt-build ros-melodic-driver-common ros-melodic-gazebo-ros-control ros-melodic-gazebo-ros-pkgs ros-melodic-ros-control ros-melodic-control-toolbox ros-melodic-realtime-tools ros-melodic-ros-controllers ros-melodic-xacro python-wstool ros-melodic-tf-conversions ros-melodic-kdl-parser python-wstool python-catkin-tools qt4-default\n```\n- IPFS 0.4.22 (download from [here][db3] and install)\n- pip:\n```sh\nsudo apt install python-pip\n```\n\n- ipfshttpclient:\n```sh\npip install ipfshttpclient\n```\n - Robonomics node (binary file) (download latest [release][db4] here)\n - IPFS browser extension (not necessary)\n\n## 1. Download simulation and controller packages\nDownload packages:\n```sh\ncd ~\nmkdir -p robot_ws/src\ncd robot_ws/src/\nwstool init .\nwstool merge https://raw.githubusercontent.com/RethinkRobotics/baxter_simulator/master/baxter_simulator.rosinstall\nwstool update\ngit clone https://github.com/nakata5321/Baxter_simulation_controller.git\n```\nThis packages were created for ROS indigo. We have to change some files to run them on ROS melodic.\nWe will use **patch** files.\n```sh\npatch ./baxter_simulator/baxter_sim_io/include/baxter_sim_io/qnode.hpp ./Baxter_simulation_controller/patch/qnode_patch\npatch ./baxter_simulator/baxter_sim_kinematics/src/arm_kinematics.cpp ./Baxter_simulation_controller/patch/arm_patch\n```\nAnd let's build  all our packages:\n```sh\ncd ..\ncatkin build\n```\nDont forget to add source command:\n```sh\necho \"source /home/$USER/robot_ws/devel/setup.bash\" >> ~/.bashrc\n```  \nAt the end save *Robonomics node (binary file)* in **robot_ws** directory.\n\n## 2. Start simulation\n### Let's start our simulation:\nAt first copy and edit baxter.sh\n```sh\ncp src/baxter/baxter.sh .\n```\nEdit the following values in `baxter.sh` :\n- your_ip value - put your local ip address\n- ros_version\n\nRun the baxter shell script with sim specified:\n```sh\n./baxter.sh sim\nroslaunch baxter_gazebo baxter_world.launch\n```\nYou can put some models in front of our baxter. It will be more intresting.\n![baxter][im2]\n\n## 3.Manage accounts in DAPP\n\nSince we are testing, let us create a local robonomics network with robonomics binary file. Go to folder with robonomics file and run:\n```sh\n./robonomics --dev --rpc-cors all\n```\n![robonomics][im3]\n\nDon't forget to remove `db` folder after every launch:\n```sh\nrm -rf /home/$USER/.local/share/robonomics/chains/dev/db\n```\n\nGo to [https://parachain.robonomics.network][db5] and switch to local node\n![local node][im4]\n\nGo to Accounts and create __Baxter__ and __Employer__ accounts (__Robot__ is not necessary)\n\nYou can find The manual \"Create an Account on Robonomics Portal\" [here][db6]\n\n__Important!__ Copy each account's key and address (to copy address click on account's icon).You should change value from **Mnemonic** to **Raw seed** in second raw. It will be the private key for account.\nTransfer some money (units) to these accounts:\n\n![create account][im5]\n![accounts][im6]\n\nAdd Baxter's secret key and adress to `config.yaml` in `robot_ws/src/Baxter_simulation_controller/config/`\n\n## 4.Start simulation\n\nIn new window run:\n```sh\nifps init #you only need to do this once\nipfs daemon\n```\nOpen separate terminal and start *controller package*:\n```sh\nrosrun robot_controller robot_control.py\n```\n![waiting][im7]\n\nReturn to the first terminal, open new window and send command to [**robonomics io**][db6]. This command will turn ON your robot:\n```sh\necho \"ON\" | ./robonomics io write launch -r <BAXTER ADDRESS> -s <EMPLOYER’S KEY>\n```\nWhere `<BAXTER ADDRESS>`  and `<EMPLOYER’S KEY>` are replaced with previously saved strings accordingly.\n\n![rob_message][im8]\n\nYou should see the following:\n\n![working][im9]\n\nwhen the work is over go to the Robonomics Portal to `Developer > Chain state`. Choose *datalog* in **state query** and add Baxter datalog message using \"+\" button.\n\n![datalog][im10]\n\nNow the IPFS hash of the telemetry and photos is saved in the blockchain. To see the data simply copy the hash and insert it in the search bar with URL:  \n#### gateway.ipfs.io/ipfs/<put your hash here>\n\n\n\nThat's all!\n\n![result1][im12]\n![result2][im13]\n\n[db1]: <https://youtu.be/2AQGFVzkGdg>\n[db2]: <http://wiki.ros.org/melodic/Installation>\n[db3]: <https://dist.ipfs.io/go-ipfs/v0.4.22/go-ipfs_v0.4.22_linux-386.tar.gz>\n[db4]: <https://github.com/airalab/robonomics/releases>\n[db6]: <https://wiki.robonomics.network/docs/create-accounts-in-dapp/>\n[im1]: <./images/baxter_demo/empty_world.jpg>\n[im2]: <./images/baxter_demo/baxter_simulation.jpg>\n[im3]: <./images/baxter_demo/robonomics.jpg>\n[db5]: <https://parachain.robonomics.network>\n[im4]: <./images/baxter_demo/local_node.jpg>\n[im5]: <./images/baxter_demo/create_account.jpg>\n[im6]: <./images/baxter_demo/accounts.jpg>\n[im7]: <./images/baxter_demo/waiting.jpg>\n[db6]: <https://wiki.robonomics.network/docs/rio-overview/>\n[im8]: <./images/baxter_demo/rob_message.jpg>\n[im9]: <./images/baxter_demo/working.jpg>\n[im10]: <./images/baxter_demo/datalog.jpg>\n[im11]: <./images/baxter_demo/ipfs.jpg>\n[im12]: <./images/baxter_demo/result1.jpg>\n[im13]: <./images/baxter_demo/result2.jpg>\n\n"}},"context":{}}