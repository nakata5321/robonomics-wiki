{"hash":"8ce8098dbcf84c5f2dac1c8bb4c54a96a641a156","data":{"doc":{"id":"f269a41642c24f0437818aedbb7a3d89","title":"Configuration Options Description","headings":[{"value":"Configuration Options Description"}],"subtitles":[{"depth":1,"value":"Configuration Options Description","anchor":"#configuration-options-description"},{"depth":2,"value":"Scenario #1: Connect SDS011 to serial port","anchor":"#scenario-1-connect-sds011-to-serial-port"},{"depth":2,"value":"Scenario #2: Connect SDS011 via TCP","anchor":"#scenario-2-connect-sds011-via-tcp"},{"depth":3,"value":"ESP Board Preparation","anchor":"#esp-board-preparation"},{"depth":3,"value":"Connectivity Configuration","anchor":"#connectivity-configuration"},{"depth":2,"value":"Scenario #3: Connect Multiple Sensors and Publish to Datalog","anchor":"#scenario-3-connect-multiple-sensors-and-publish-to-datalog"},{"depth":3,"value":"Install Robonomics","anchor":"#install-robonomics"},{"depth":3,"value":"Configuration","anchor":"#configuration"}],"content":"# Configuration Options Description\n\nBasically, you can think of the package as a black box with one input (sensor data) and many outputs.\nFor now only SDS011 sensor is supported, but if you are familiar with Python it'd be easy to add other sensors as well.\n\nHave a look at [configuration](https://github.com/airalab/sensors-connectivity/blob/master/config/default.yaml) file:\n\n```yaml\n# Please DO NOT edit this file\n# Make a copy instead, make changes and pass the absolute path to the copy in arguments\ngeneral:\n  publish_interval: 30  # time between two published messages\ncomstation:\n  enable: true\n  port: \"/dev/ttyUSB0\"  # COM port of the device\n  work_period: 300      # time between two measurements in seconds\n  geo: \"\"               # Geo coordinates as latitude,longitude\n  public_key: \"\"        # If not provided, COMStation creates itself\ntcpstation:\n  enable: true\n  address: \"0.0.0.0:31313\"  # IP and PORT to listen to, 0.0.0.0:31313 means available for everyone\n  acl:                  # list of known addresses. If not specified accepts from everyone\n  # -\n  # -\nluftdaten:\n  enable: true          # whether or not publish to https://luftdaten.info/\nrobonomics:\n  enable: true          # enable use of Robonomics Network\n  ipfs_provider: \"/ip4/127.0.0.1/tcp/5001/http\" # ipfs endpoint\n  ipfs_topic: \"airalab.lighthouse.5.robonomics.eth\"\ndatalog:\n  enable: false         # enable use of Datalog Robonomics subcommand\n  path: \"\"              # path to Robonomics execution file\n  suri: \"\"              # private key of publisher account\n  remote: \"wss://substrate.ipci.io\"\n  dump_interval: 3600   # time between two transactions in seconds\n  temporal_username: \"\" # Temporal.Cloud credentials\n  temporal_password: \"\"\ndev:\n  sentry: \"\"\n```\n\nAt the moment it's possible to publish data to [Luftdaten](https://luftdaten.info/), [Robonomics Network](https://robonomics.network/) and [Datalog](https://github.com/airalab/robonomics).\nThe last one is experimental!\n\n> DO NOT edit `config/default.yaml` file. Instead make a copy\n\nPlay around with the configuration!\n\nExplanation of options:\n\n| Field                         | Description                                                                                                                                                                                                                                           |\n|------------------------------    |------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    |\n| `general/publish_interval`         | integer number from 1 and above. Tells how often send measurements. Keep in mind that if measurements from sensors come less often than this number connectivity sends last data      |\n| `comstation/enable`                | true/false. Enabling/disabling the station      |\n| `comstation/port`                  | valid path to com port, for example `/dev/ttyUSB0`. It is where a sensor is connected to      |\n| `comstation/work_period`           | integer from 0 to 1800. For SDS011 sensor 0 means continuous work. Recommended period is 300 seconds     |\n| `comstation/geo`                   | `lat,lon` a string with two floats separated by a comma. It represents latitude and longitude of a sensor     |\n| `comstation/public_key`            | Ed25519 verifying key in hex format. If not provided connectivity generates a new one      |\n| `tcpstation/enable`                | true/false. Enabling/disabling the station   |\n| `tcpstation/address`               | what address and port listen to. If you are willing to make it open for external connections put `0.0.0.0` as an address. `31313` is a port chosen by the developers. You can pick any port you want, but don't forget to change the port in an ESP firmware.     |\n| `tcpstation/acl`                   | a list of known public keys in hex format   |\n| `luftdaten/enable`                 | true/false. Whether or not publish data to [Luftdaten](https://devices.sensor.community/). Don't forget to register the sensor's mac address on the site         |\n| `robonomics/enable`                | true/false. Whether or not publish data to IPFS topic according to Robonomics communication protocol      |\n| `robonomics/ipfs_proveder`         | an endpoint for IPFS daemon. By default it's `/ip4/127.0.0.1/tcp/5001/http` that means local daemon. The endpoint must by in multiaddr format. For example for [Infura.io](https://infura.io/) it would be `/dns/ipfs.infura.io/tcp/5001/https`       |\n| `robonomics/ipfs_topic`            | IPFS topic's name. If you want to use [DApp](https://sensors.robonomics.network) provided by Robonomics team leave it untouched                 |\n| `datalog/enable`                   | true/false. Enable/Disable saving log to [Robonomics on Substrate chain](https://ui.ipci.io/)    |\n| `datalog/path`                     | full path to `robonomics` executable file. You can find the latest release on [this](https://github.com/airalab/robonomics/releases) page  |\n| `datalog/suri`                     | a private key from substrate chain account  |\n| `datalog/remote`                   | an endpoint to substrate instance                                                           |\n| `datalog/dump_interval`            | specify a period of time for collecting log in seconds                                      |\n| `datalog/temporal_username`        | set username to upload files to [Temporal.Cloud](https://temporal.cloud/)                   |\n| `detalog/temporal_password`        | set passward to upload files to [Temporal.Cloud](https://temporal.cloud/)                   |\n| `dev/sentry`                       | for development purpose. If you have a [Sentry.io](https://sentry.io/) account you can put sentry's credentials in here   |\n\n## Scenario #1: Connect SDS011 to serial port\n\nThe easiest and the most straightforward way to connect your sensor to the network is using the serial port\n\nConnect you SDS011 sensor to a USB port, let's assume it got `/dev/ttyUSB0` address\n\n```yaml\ngeneral:\n  publish_interval: 30 \ncomstation:\n  enable: true\n  port: \"/dev/ttyUSB0\"\n  work_period: 300      \n  geo: \"59.944954,30.294534\"\n  public_key: \"\" \ntcpstation:\n  enable: false\n  address: \"0.0.0.0:31313\" \n  acl:                  \nluftdaten:\n  enable: true \nrobonomics:\n  enable: true\nipfs_provider: \"/ip4/127.0.0.1/tcp/5001/http\"\n  ipfs_topic: \"airalab.lighthouse.5.robonomics.eth\"\ndatalog:\n  enable: false         \n  path: \"\"              \n  suri: \"\"              \n  remote: \"wss://substrate.ipci.io\"\n  dump_interval: 3600   \n  temporal_username: \"\" \n  temporal_password: \"\"\ndev:\n  sentry: \"\"\n```\n\n## Scenario #2: Connect SDS011 via TCP\n\n### ESP Board Preparation\n\nFirst you need to generate a signing/verifying keys pair and upload the firmware. Go to [Firmware Upload](iot-firmware-upload)\n\n### Connectivity Configuration\n\n```yaml\ngeneral:\n  publish_interval: 30 \ncomstation:\n  enable: false \n  port: \"/dev/ttyUSB0\"\n  work_period: 300      \n  geo: \"59.944954,30.294534\"\n  public_key: \"\" \ntcpstation:\n  enable: true\n  address: \"0.0.0.0:31313\" \n  acl:                  \nluftdaten:\n  enable: false \nrobonomics:\n  enable: true\nipfs_provider: \"/ip4/127.0.0.1/tcp/5001/http\"\n  ipfs_topic: \"airalab.lighthouse.5.robonomics.eth\"\ndatalog:\n  enable: false         \n  path: \"\"              \n  suri: \"\"              \n  remote: \"wss://substrate.ipci.io\"\n  dump_interval: 3600   \n  temporal_username: \"\" \n  temporal_password: \"\"\ndev:\n  sentry: \"\"\n```\n\n> Do not forget to open the port in system firewall\n>\n> On NixOS you can do:\n> ```\n> networking.firewall.allowedTCPPorts = [ 31313 ];\n> ```\n\n## Scenario #3: Connect Multiple Sensors and Publish to Datalog\n\nIn order to upload a firmware to ESP board read [ESP Board Preparation](#esp-board-preparation) section.\n\n### Install Robonomics\n\nFrom `root` user do:\n\n```\necho \"https://github.com/airalab/airapkgs/archive/nixos-unstable.tar.gz nixos\" > /root/.nix-channels\nnix-channel --update\n```\n\nThen edit `/etc/nixos/configuration.nix` and add:\n\n```\n...\n  environment.systemPackages = with pkgs; [\n        substrate-node-robonomics-bin\n  ];\n...\n```\n\nRun rebuild and find out where `robonomics` is:\n```\nnixos-rebuild switch\nwhereis robonomics\n```\n\nLet's assume you got the following path: `/nix/store/2gz2ik17w5xad8w819bsb05a23pbjbya-system-path/bin/robonomics`\n\n### Configuration\n\n```yaml\ngeneral:\n  publish_interval: 30 \ncomstation:\n  enable: false \n  port: \"/dev/ttyUSB0\"\n  work_period: 300      \n  geo: \"59.944954,30.294534\"\n  public_key: \"\" \ntcpstation:\n  enable: true\n  address: \"0.0.0.0:31313\" \n  acl:                  \nluftdaten:\n  enable: false \nrobonomics:\n  enable: true\nipfs_provider: \"/ip4/127.0.0.1/tcp/5001/http\"\n  ipfs_topic: \"airalab.lighthouse.5.robonomics.eth\"\ndatalog:\n  enable: true\n  path: \"/nix/store/2gz2ik17w5xad8w819bsb05a23pbjbya-system-path/bin/robonomics\"              \n  suri: \"0x...\"              \n  remote: \"wss://substrate.ipci.io\"\n  dump_interval: 3600   \n  temporal_username: \"temporaluser\"  # optional \n  temporal_password: \"temporalpass\"  # optional\ndev:\n  sentry: \"\"\n```\n\n"}},"context":{}}